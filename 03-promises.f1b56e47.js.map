{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBACpBD,SAASC,cAAc,yBAqB5C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,EAAgBT,EAAUC,GACjCS,EAAAnB,GAASoB,OAAOC,QAAQ,qBAAqBZ,QAAeC,MAAW,CACrEY,cAAc,EACdC,QAAS,K,CAIb,SAASC,EAAaf,EAAUC,GAC9BS,EAAAnB,GAASoB,OAAOK,QAAQ,oBAAoBhB,QAAeC,MAAW,CACpEY,cAAc,EACdC,QAAS,K,CA3CbrB,EAAKwB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACN,MAAMC,EAAQC,SAASzB,EAAS0B,OAC1BC,EAAOF,SAASxB,EAAQyB,OACxBE,EAASH,SAASvB,EAAUwB,OAElC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/B1B,EAFiB0B,EAAI,EACAL,EAAQK,EAAIF,GAE9BG,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBQ,EAAgBT,EAAUC,EAAM,IAEjC0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBc,EAAaf,EAAUC,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInp = document.querySelector('input[name=\"delay\"]');\nconst stepInp = document.querySelector('input[name=\"step\"]');\nconst amountInp = document.querySelector('input[name=\"amount\"]');\nconst createButton = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  const delay = parseInt(delayInp.value);\n  const step = parseInt(stepInp.value);\n  const amount = parseInt(amountInp.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        successNotiflix(position, delay);\n      })\n      .catch(({ position, delay }) => {\n        failNotiflix(position, delay);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction successNotiflix(position, delay) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n    clickToclose: true,\n    timeOut: 4000,\n  });\n}\n\nfunction failNotiflix(position, delay) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n    clickToclose: true,\n    timeOut: 4000,\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$stepInp","$47d4ff9957288465$var$amountInp","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$successNotiflix","$parcel$interopDefault","Notify","success","clickToclose","timeOut","$47d4ff9957288465$var$failNotiflix","failure","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.f1b56e47.js.map"}