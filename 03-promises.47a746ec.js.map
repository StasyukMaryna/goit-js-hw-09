{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBACpBD,SAASC,cAAc,yBAqB5C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAgBT,EAAUC,GACjCS,EAAAnB,GAASoB,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CACrEa,cAAc,EACdC,QAAS,K,CAIb,SAASC,EAAahB,EAAUC,GAC9BS,EAAAnB,GAASoB,OAAOM,QAAQ,oBAAmCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CACpEa,cAAc,EACdC,QAAS,K,CA3CbtB,EAAKyB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,SAAS1B,EAAS2B,OAC1BC,EAAOF,SAASzB,EAAQ0B,OACxBE,EAASH,SAASxB,EAAUyB,OAEzBG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/B3B,EAFiB2B,EAAI,EACAL,EAAQK,EAAIF,GAE9BG,MAAK,SAAAC,GACJnB,EADemB,EAAR5B,SAAe4B,EAAL3B,M,IAGlB4B,OAAM,SAAAD,GACLZ,EADgBY,EAAR5B,SAAe4B,EAAL3B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInp = document.querySelector('input[name=\"delay\"]');\nconst stepInp = document.querySelector('input[name=\"step\"]');\nconst amountInp = document.querySelector('input[name=\"amount\"]');\nconst createButton = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  const delay = parseInt(delayInp.value);\n  const step = parseInt(stepInp.value);\n  const amount = parseInt(amountInp.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        successNotiflix(position, delay);\n      })\n      .catch(({ position, delay }) => {\n        failNotiflix(position, delay);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction successNotiflix(position, delay) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n    clickToclose: true,\n    timeOut: 4000,\n  });\n}\n\nfunction failNotiflix(position, delay) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n    clickToclose: true,\n    timeOut: 4000,\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$stepInp","$ce04d3a99e08e73b$var$amountInp","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$successNotiflix","$parcel$interopDefault","Notify","success","concat","clickToclose","timeOut","$ce04d3a99e08e73b$var$failNotiflix","failure","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","then","param","catch"],"version":3,"file":"03-promises.47a746ec.js.map"}